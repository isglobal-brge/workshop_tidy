---
title: "Block 3 Assessment: Advanced Machine Learning and Deployment"
author: "David Sarrat González, Juan R González"
date: today
format:
  html:
    code-fold: false
    code-tools: false
    theme: cosmo
    css: quiz-styles.css
---

```{=html}
<style>
.quiz-container {
  max-width: 800px;
  margin: 0 auto;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.question {
  background: #f8f9fa;
  border-radius: 12px;
  padding: 24px;
  margin: 32px 0;
  border-left: 5px solid #007bff;
  transition: all 0.3s ease;
}

.question:hover {
  box-shadow: 0 4px 16px rgba(0,123,255,0.1);
}

.question h3 {
  color: #2c3e50;
  margin-bottom: 20px;
  font-size: 1.2em;
}

.options {
  list-style: none;
  padding: 0;
  margin: 0;
}

.option {
  background: white;
  border: 2px solid #e9ecef;
  border-radius: 8px;
  padding: 16px;
  margin: 12px 0;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
}

.option:hover {
  background: #f8f9fa;
  border-color: #007bff;
  transform: translateY(-2px);
}

.option.selected {
  background: #e3f2fd;
  border-color: #2196f3;
}

.option.correct {
  background: #d4edda;
  border-color: #28a745;
  color: #155724;
}

.option.incorrect {
  background: #f8d7da;
  border-color: #dc3545;
  color: #721c24;
}

.option.disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.feedback {
  margin-top: 16px;
  padding: 16px;
  border-radius: 8px;
  display: none;
}

.feedback.show {
  display: block;
}

.feedback.correct {
  background: #d4edda;
  border: 1px solid #c3e6cb;
  color: #155724;
}

.feedback.incorrect {
  background: #f8d7da;
  border: 1px solid #f5c6cb;
  color: #721c24;
}

.score-container {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: white;
  border: 2px solid #007bff;
  border-radius: 12px;
  padding: 16px;
  box-shadow: 0 4px 16px rgba(0,123,255,0.15);
  z-index: 1000;
}

.progress-bar {
  width: 100%;
  height: 8px;
  background: #e9ecef;
  border-radius: 4px;
  margin: 20px 0;
  overflow: hidden;
}

.progress {
  height: 100%;
  background: #007bff;
  width: 0%;
  transition: width 0.5s ease;
}

.final-results {
  background: #f8f9fa;
  border: 3px solid #007bff;
  border-radius: 8px;
  padding: 32px;
  text-align: center;
  margin: 32px 0;
  display: none;
  box-shadow: 0 2px 8px rgba(0,123,255,0.15);
}

.final-results h2 {
  color: #2c3e50;
  margin-bottom: 20px;
}

.final-results h3 {
  color: #495057;
}

.final-results p {
  color: #495057;
}

.final-results.show {
  display: block;
  animation: fadeIn 0.5s ease;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.badge {
  display: inline-block;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.9em;
  font-weight: 500;
  margin: 8px 4px;
}

.badge.excellent { background: #28a745; color: white; }
.badge.good { background: #ffc107; color: #212529; }
.badge.needs-review { background: #dc3545; color: white; }

.reset-btn {
  background: #6c757d;
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 6px;
  cursor: pointer;
  margin-top: 16px;
  transition: all 0.3s ease;
}

.reset-btn:hover {
  background: #5a6268;
  transform: translateY(-2px);
}

.continue-btn {
  display: inline-block;
  background: #28a745;
  color: white;
  text-decoration: none;
  padding: 12px 24px;
  border-radius: 6px;
  margin-left: 16px;
  transition: all 0.3s ease;
  font-weight: 500;
}

.continue-btn:hover {
  background: #218838;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
  color: white;
  text-decoration: none;
}
</style>

<div class="quiz-container">
  <div class="score-container">
    <h4 style="margin: 0 0 12px 0;">Progress</h4>
    <div id="score">Score: <span id="current-score">0</span>/<span id="total-questions">15</span></div>
    <div class="progress-bar">
      <div class="progress" id="progress"></div>
    </div>
    <div style="font-size: 0.9em; margin-top: 8px;">
      <span id="answered-count">0</span> questions answered
    </div>
  </div>

  <h1 style="text-align: center; color: #2c3e50; margin-bottom: 2em;">
    Block 3 Assessment: Advanced Machine Learning and Deployment
  </h1>

  <div style="background: #e3f2fd; border-radius: 8px; padding: 20px; margin-bottom: 32px;">
    <h3 style="margin-top: 0;">Instructions</h3>
    <p>This quiz covers advanced machine learning concepts from Block 3 (Chapters 14-18). Click on your chosen answer for each question. You'll receive immediate feedback with explanations for incorrect options.</p>
  </div>

  <div class="question" data-question="1">
    <h3>1. What function does logistic regression use to map linear combinations to probabilities?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Square root function</li>
      <li class="option" data-answer="b">Exponential function</li>
      <li class="option" data-answer="c">Sigmoid (logistic) function</li>
      <li class="option" data-answer="d">Linear function</li>
    </ul>
    <div class="feedback" id="feedback-1"></div>
  </div>

  <div class="question" data-question="2">
    <h3>2. Which metric is most appropriate for evaluating a highly imbalanced binary classification problem?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Accuracy</li>
      <li class="option" data-answer="b">AUC-ROC</li>
      <li class="option" data-answer="c">Mean Squared Error</li>
      <li class="option" data-answer="d">R-squared</li>
    </ul>
    <div class="feedback" id="feedback-2"></div>
  </div>

  <div class="question" data-question="3">
    <h3>3. What is the main purpose of regularization in regression models?</h3>
    <ul class="options">
      <li class="option" data-answer="a">To handle missing values</li>
      <li class="option" data-answer="b">To speed up training</li>
      <li class="option" data-answer="c">To increase model complexity</li>
      <li class="option" data-answer="d">To prevent overfitting by penalizing large coefficients</li>
    </ul>
    <div class="feedback" id="feedback-3"></div>
  </div>

  <div class="question" data-question="4">
    <h3>4. What is the key difference between Ridge and Lasso regularization?</h3>
    <ul class="options">
      <li class="option" data-answer="a">They are identical methods</li>
      <li class="option" data-answer="b">Ridge uses L2 penalty, Lasso uses L1 penalty</li>
      <li class="option" data-answer="c">Ridge is faster, Lasso is more accurate</li>
      <li class="option" data-answer="d">Ridge is for classification, Lasso is for regression</li>
    </ul>
    <div class="feedback" id="feedback-4"></div>
  </div>

  <div class="question" data-question="5">
    <h3>5. What is bagging in ensemble methods?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Training models sequentially, each correcting previous errors</li>
      <li class="option" data-answer="b">Training multiple models on different bootstrap samples of the data</li>
      <li class="option" data-answer="c">Combining predictions using weighted voting</li>
      <li class="option" data-answer="d">Using different features for each model</li>
    </ul>
    <div class="feedback" id="feedback-5"></div>
  </div>

  <div class="question" data-question="6">
    <h3>6. What is the main difference between bagging and boosting?</h3>
    <ul class="options">
      <li class="option" data-answer="a">There is no difference</li>
      <li class="option" data-answer="b">Bagging trains models in parallel, boosting trains them sequentially</li>
      <li class="option" data-answer="c">Bagging uses decision trees, boosting uses linear models</li>
      <li class="option" data-answer="d">Bagging is for regression, boosting is for classification</li>
    </ul>
    <div class="feedback" id="feedback-6"></div>
  </div>

  <div class="question" data-question="7">
    <h3>7. What is the primary goal of K-means clustering?</h3>
    <ul class="options">
      <li class="option" data-answer="a">To minimize within-cluster variance</li>
      <li class="option" data-answer="b">To reduce the number of features</li>
      <li class="option" data-answer="c">To maximize between-cluster variance</li>
      <li class="option" data-answer="d">To predict class labels for new data</li>
    </ul>
    <div class="feedback" id="feedback-7"></div>
  </div>

  <div class="question" data-question="8">
    <h3>8. Why is data scaling important before applying K-means clustering?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Scaling is not necessary for K-means</li>
      <li class="option" data-answer="b">To reduce memory usage</li>
      <li class="option" data-answer="c">K-means uses distance measures that can be dominated by variables with large scales</li>
      <li class="option" data-answer="d">To improve algorithm speed</li>
    </ul>
    <div class="feedback" id="feedback-8"></div>
  </div>

  <div class="question" data-question="9">
    <h3>9. What does PCA (Principal Component Analysis) accomplish?</h3>
    <ul class="options">
      <li class="option" data-answer="a">It clusters similar observations together</li>
      <li class="option" data-answer="b">It improves classification accuracy</li>
      <li class="option" data-answer="c">It handles missing values in datasets</li>
      <li class="option" data-answer="d">It reduces dimensionality while preserving variance</li>
    </ul>
    <div class="feedback" id="feedback-9"></div>
  </div>

  <div class="question" data-question="10">
    <h3>10. What is the "elbow method" used for in clustering?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Scaling the features appropriately</li>
      <li class="option" data-answer="b">Determining outliers in the data</li>
      <li class="option" data-answer="c">Selecting the best clustering algorithm</li>
      <li class="option" data-answer="d">Choosing the optimal number of clusters</li>
    </ul>
    <div class="feedback" id="feedback-10"></div>
  </div>

  <div class="question" data-question="11">
    <h3>11. What is model stacking in ensemble methods?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Training models on different datasets</li>
      <li class="option" data-answer="b">Storing models in a hierarchical structure</li>
      <li class="option" data-answer="c">Using a meta-model to combine predictions from multiple base models</li>
      <li class="option" data-answer="d">Training multiple models with identical parameters</li>
    </ul>
    <div class="feedback" id="feedback-11"></div>
  </div>

  <div class="question" data-question="12">
    <h3>12. What is the main challenge with deploying machine learning models to production?</h3>
    <ul class="options">
      <li class="option" data-answer="a">Ensuring reliability, scalability, and maintainability</li>
      <li class="option" data-answer="b">Models become obsolete immediately</li>
      <li class="option" data-answer="c">Production environments don't support R</li>
      <li class="option" data-answer="d">Models always perform worse in production</li>
    </ul>
    <div class="feedback" id="feedback-12"></div>
  </div>

  <div class="question" data-question="13">
    <h3>13. What is the purpose of the plumber package in R?</h3>
    <ul class="options">
      <li class="option" data-answer="a">To manage package dependencies</li>
      <li class="option" data-answer="b">To deploy Shiny applications</li>
      <li class="option" data-answer="c">To create REST APIs from R functions</li>
      <li class="option" data-answer="d">To fix data pipeline errors</li>
    </ul>
    <div class="feedback" id="feedback-13"></div>
  </div>

  <div class="question" data-question="14">
    <h3>14. What is Docker containerization useful for in model deployment?</h3>
    <ul class="options">
      <li class="option" data-answer="a">It ensures consistent environments across development and production</li>
      <li class="option" data-answer="b">It improves model accuracy</li>
      <li class="option" data-answer="c">It automatically tunes hyperparameters</li>
      <li class="option" data-answer="d">It makes models run faster</li>
    </ul>
    <div class="feedback" id="feedback-14"></div>
  </div>

  <div class="question" data-question="15">
    <h3>15. Why is model monitoring important in production systems?</h3>
    <ul class="options">
      <li class="option" data-answer="a">To track model performance and detect data drift over time</li>
      <li class="option" data-answer="b">To automatically improve model accuracy</li>
      <li class="option" data-answer="c">To reduce computational costs</li>
      <li class="option" data-answer="d">To comply with data privacy regulations</li>
    </ul>
    <div class="feedback" id="feedback-15"></div>
  </div>

  <div class="final-results" id="final-results">
    <h2>Quiz Complete!</h2>
    <div id="final-score-display"></div>
    <div id="performance-badge"></div>
    <div id="learning-suggestions"></div>
    <div style="margin-top: 24px;">
      <button class="reset-btn" onclick="resetQuiz()">Retake Quiz</button>
      <a href="index.html" class="continue-btn">
        Return to Workshop Home
      </a>
    </div>
  </div>
</div>

<script>
const questions = {
  1: {
    correct: 'c',
    explanations: {
      a: 'Incorrect. The square root function does not have the right range or properties for probability modeling.',
      b: 'Incorrect. The exponential function grows without bound and is not suitable for probabilities.',
      c: 'Correct! The sigmoid (logistic) function maps any real number to a value between 0 and 1, making it perfect for probabilities.',
      d: 'Incorrect. Linear functions cannot constrain outputs to the [0,1] probability range.'
    }
  },
  2: {
    correct: 'b',
    explanations: {
      a: 'Incorrect. Accuracy can be misleading with imbalanced classes (high accuracy by predicting majority class).',
      b: 'Correct! AUC-ROC is robust to class imbalance as it considers true/false positive rates across all thresholds.',
      c: 'Incorrect. MSE is for regression problems, not classification.',
      d: 'Incorrect. R-squared is for regression problems, not classification.'
    }
  },
  3: {
    correct: 'd',
    explanations: {
      a: 'Incorrect. Regularization does not handle missing values; that is done during preprocessing.',
      b: 'Incorrect. Regularization may actually slow training slightly but the main purpose is preventing overfitting.',
      c: 'Incorrect. Regularization actually reduces model complexity by constraining parameters.',
      d: 'Correct! Regularization adds a penalty term to prevent overfitting by discouraging large coefficient values.'
    }
  },
  4: {
    correct: 'b',
    explanations: {
      a: 'Incorrect. Ridge and Lasso use different penalty functions with different properties.',
      b: 'Correct! Ridge uses L2 penalty (sum of squared coefficients), Lasso uses L1 penalty (sum of absolute values).',
      c: 'Incorrect. Speed and accuracy differences depend on the specific problem and implementation.',
      d: 'Incorrect. Both Ridge and Lasso can be used for classification and regression.'
    }
  },
  5: {
    correct: 'b',
    explanations: {
      a: 'Incorrect. This describes boosting, not bagging.',
      b: 'Correct! Bagging (Bootstrap Aggregating) trains multiple models on different bootstrap samples and averages predictions.',
      c: 'Incorrect. While bagging combines predictions, it typically uses simple averaging, not weighted voting.',
      d: 'Incorrect. Using different features is a separate ensemble technique, not specifically bagging.'
    }
  },
  6: {
    correct: 'b',
    explanations: {
      a: 'Incorrect. Bagging and boosting are fundamentally different ensemble approaches.',
      b: 'Correct! Bagging trains models independently in parallel, while boosting trains them sequentially, each learning from previous mistakes.',
      c: 'Incorrect. Both can use various types of base models, not restricted to specific algorithms.',
      d: 'Incorrect. Both can be used for classification and regression.'
    }
  },
  7: {
    correct: 'a',
    explanations: {
      a: 'Correct! K-means aims to minimize the within-cluster sum of squares (variance).',
      b: 'Incorrect. Feature reduction is the goal of dimensionality reduction techniques like PCA, not K-means.',
      c: 'Incorrect. While maximizing between-cluster variance is desirable, the algorithm directly minimizes within-cluster variance.',
      d: 'Incorrect. K-means is unsupervised and does not predict class labels for new data.'
    }
  },
  8: {
    correct: 'c',
    explanations: {
      a: 'Incorrect. Scaling is crucial for distance-based algorithms like K-means.',
      b: 'Incorrect. Scaling does not significantly affect memory usage.',
      c: 'Correct! K-means uses distance measures, so variables with larger scales can dominate the clustering if not scaled.',
      d: 'Incorrect. Scaling may slightly affect speed but that is not the main reason.'
    }
  },
  9: {
    correct: 'd',
    explanations: {
      a: 'Incorrect. PCA is a dimensionality reduction technique, not a clustering method.',
      b: 'Incorrect. PCA is primarily for dimensionality reduction, not directly for improving classification accuracy.',
      c: 'Incorrect. PCA does not handle missing values; preprocessing is needed beforehand.',
      d: 'Correct! PCA finds linear combinations of variables that capture maximum variance while reducing dimensions.'
    }
  },
  10: {
    correct: 'd',
    explanations: {
      a: 'Incorrect. Feature scaling is a preprocessing step, not related to the elbow method.',
      b: 'Incorrect. Outlier detection uses different methods, not the elbow method.',
      c: 'Incorrect. The elbow method is specifically for choosing the number of clusters, not the algorithm.',
      d: 'Correct! The elbow method plots within-cluster sum of squares vs number of clusters to find the optimal K.'
    }
  },
  11: {
    correct: 'c',
    explanations: {
      a: 'Incorrect. While models may be trained on different datasets, stacking specifically refers to the meta-model approach.',
      b: 'Incorrect. Stacking refers to the prediction combination strategy, not storage structure.',
      c: 'Correct! Stacking uses a meta-model (often called a blender) to learn how to best combine predictions from multiple base models.',
      d: 'Incorrect. Model stacking uses diverse models with different parameters.'
    }
  },
  12: {
    correct: 'a',
    explanations: {
      a: 'Correct! Production systems require reliability (24/7 operation), scalability (handling load), and maintainability (updates and monitoring).',
      b: 'Incorrect. Well-designed models can remain useful for extended periods with proper monitoring and maintenance.',
      c: 'Incorrect. Many production environments support R through various deployment options.',
      d: 'Incorrect. Models can perform well in production with proper implementation.'
    }
  },
  13: {
    correct: 'c',
    explanations: {
      a: 'Incorrect. Package dependency management is handled by tools like renv, not plumber.',
      b: 'Incorrect. Shiny applications are deployed using different tools, not plumber.',
      c: 'Correct! Plumber allows you to create REST APIs from R functions using special comments and decorators.',
      d: 'Incorrect. Plumber does not fix pipeline errors; it creates web APIs.'
    }
  },
  14: {
    correct: 'a',
    explanations: {
      a: 'Correct! Docker containers package the application and all its dependencies, ensuring consistent environments across different systems.',
      b: 'Incorrect. Docker affects deployment, not the statistical accuracy of models.',
      c: 'Incorrect. Docker is for deployment consistency, not hyperparameter tuning.',
      d: 'Incorrect. Docker does not inherently make models run faster.'
    }
  },
  15: {
    correct: 'a',
    explanations: {
      a: 'Correct! Model monitoring tracks performance metrics and detects when data changes (drift) that might affect model quality.',
      b: 'Incorrect. Monitoring tracks performance but does not automatically improve models.',
      c: 'Incorrect. Monitoring may add computational overhead rather than reduce costs.',
      d: 'Incorrect. While monitoring may help with compliance, its primary purpose is tracking model health and performance.'
    }
  }
};

let score = 0;
let answered = 0;

function handleAnswer(questionNum, selectedAnswer) {
  const question = document.querySelector(`[data-question="${questionNum}"]`);
  const options = question.querySelectorAll('.option');
  const feedback = question.querySelector('.feedback');
  const correctAnswer = questions[questionNum].correct;
  const isCorrect = selectedAnswer === correctAnswer;

  // Disable all options
  options.forEach(option => {
    option.classList.add('disabled');
    const answer = option.getAttribute('data-answer');
    if (answer === correctAnswer) {
      option.classList.add('correct');
    } else if (answer === selectedAnswer && !isCorrect) {
      option.classList.add('incorrect');
    }
  });

  // Show feedback
  feedback.innerHTML = questions[questionNum].explanations[selectedAnswer];
  feedback.classList.add('show');
  feedback.classList.add(isCorrect ? 'correct' : 'incorrect');

  // Update score if not already answered
  if (!question.classList.contains('answered')) {
    answered++;
    if (isCorrect) score++;
    question.classList.add('answered');
    updateScore();
  }
}

function updateScore() {
  document.getElementById('current-score').textContent = score;
  document.getElementById('answered-count').textContent = answered;
  
  const progress = (answered / 15) * 100;
  document.getElementById('progress').style.width = progress + '%';

  if (answered === 15) {
    setTimeout(showFinalResults, 500);
  }
}

function showFinalResults() {
  const percentage = Math.round((score / 15) * 100);
  const resultsDiv = document.getElementById('final-results');
  const scoreDisplay = document.getElementById('final-score-display');
  const badgeDiv = document.getElementById('performance-badge');
  const suggestionsDiv = document.getElementById('learning-suggestions');

  scoreDisplay.innerHTML = `
    <h3>Final Score: ${score}/15 (${percentage}%)</h3>
  `;

  let badge, suggestions;
  if (percentage >= 85) {
    badge = '<span class="badge excellent">Excellent!</span>';
    suggestions = '<p><strong>Outstanding performance!</strong> You have mastered advanced machine learning concepts and are ready for real-world applications.</p>';
  } else if (percentage >= 70) {
    badge = '<span class="badge good">Good Job!</span>';
    suggestions = '<p><strong>Good work!</strong> You have a solid understanding of advanced ML concepts. Review the questions you missed to strengthen your expertise.</p>';
  } else {
    badge = '<span class="badge needs-review">Needs Review</span>';
    suggestions = '<p><strong>Keep learning!</strong> Focus on reviewing Block 3 chapters. Practice with the exercises and try the quiz again.</p>';
  }

  badgeDiv.innerHTML = badge;
  suggestionsDiv.innerHTML = suggestions;
  resultsDiv.classList.add('show');

  // Scroll to results
  resultsDiv.scrollIntoView({ behavior: 'smooth' });
}

function resetQuiz() {
  score = 0;
  answered = 0;
  
  // Reset all questions
  document.querySelectorAll('.question').forEach(question => {
    question.classList.remove('answered');
    const options = question.querySelectorAll('.option');
    const feedback = question.querySelector('.feedback');
    
    options.forEach(option => {
      option.classList.remove('disabled', 'correct', 'incorrect', 'selected');
    });
    
    feedback.classList.remove('show', 'correct', 'incorrect');
  });

  // Reset score display
  updateScore();
  
  // Hide final results
  document.getElementById('final-results').classList.remove('show');

  // Scroll to top
  window.scrollTo({ top: 0, behavior: 'smooth' });
}

// Add click event listeners
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.option').forEach(option => {
    option.addEventListener('click', function() {
      if (this.classList.contains('disabled')) return;
      
      const question = this.closest('.question');
      const questionNum = parseInt(question.getAttribute('data-question'));
      const selectedAnswer = this.getAttribute('data-answer');
      
      // Visual selection
      question.querySelectorAll('.option').forEach(opt => {
        opt.classList.remove('selected');
      });
      this.classList.add('selected');
      
      handleAnswer(questionNum, selectedAnswer);
    });
  });
});
</script>
```
